# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license

# Parameters
nc: 6  # number of classes (assuming 6 classes for your specific case)
depth_multiple: 0.33  # model depth multiple
width_multiple: 0.25  # layer channel multiple
anchors:
  - [517, 187, 73, 187, 270, 94]  # P3/8
  - [243, 652, 1064, 451, 165, 372]  # P4/16
  - [492, 1285, 84, 40, 1922, 556]  # P5/32

# YOLOv5 backbone (simplified for single target per image)
backbone:
  # [from, number, module, args]
  [[-1, 1, Conv, [32, 6, 2, 2]],  # 0-P1/2, reduce channels
   [-1, 1, Conv, [64, 3, 2]],  # 1-P2/4, reduce channels
   [-1, 2, C3, [64]],  # reduce number of C3 modules
   [-1, 1, Conv, [128, 3, 2]],  # 3-P3/8, reduce channels
   [-1, 3, C3, [128]],  # reduce number of C3 modules
   [-1, 1, Conv, [256, 3, 2]],  # 5-P4/16, reduce channels
   [-1, 3, C3, [256]],  # reduce number of C3 modules
   [-1, 1, Conv, [512, 3, 2]],  # 7-P5/32, reduce channels
   [-1, 1, C3, [512]],  # reduce number of C3 modules
  ]

# YOLOv5 head (simplified for single target detection)
head:
  [[-1, 1, Conv, [256, 1, 1]],  # reduce channels
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 6], 1, Concat, [1]],  # cat backbone P4
   [-1, 2, C3, [256, False]],  # reduce number of C3 modules

   [-1, 1, Conv, [128, 1, 1]],  # reduce channels
   [-1, 1, nn.Upsample, [None, 2, 'nearest']],
   [[-1, 4], 1, Concat, [1]],  # cat backbone P3
   [-1, 2, C3, [128, False]],  # reduce number of C3 modules (P3/8-small)

   [-1, 1, Conv, [256, 3, 2]],  # increase channels for merging
   [[-1, 14], 1, Concat, [1]],  # cat head P4
   [-1, 2, C3, [256, False]],  # reduce number of C3 modules (P4/16-medium)

   [-1, 1, Conv, [512, 3, 2]],  # increase channels for merging
   [[-1, 10], 1, Concat, [1]],  # cat head P5
   [-1, 2, C3, [512, False]],  # reduce number of C3 modules (P5/32-large)

   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)
  ]
